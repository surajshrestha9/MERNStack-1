<<<<<<< HEAD
// download and install mongodb
// download and install mongosh
show dbs
use mern7 //create and switch new database
db //current database
use test
> use mern6 //create and switch to new db
show dbs
db //current db
> test
use mern7 //switch
test> db.dropDatabase()

//Create Collection and Insert Document
db> db.person.insertOne({'name':'Krishna'})
show dbs

//Display all the collections
db > show collections
db > db.getCollectionInfos({name:"tecaher"})

# Inserting Record -1
mydb > db.person.insert ({name:'Krishna', address:'KTM'});
mydb > db.person.insert ({name:'Keshor', phone:'9841345678'});
mydb > db.person.insert ({name:'Raj', email:'raj@gmail.com'});
mydb > db.person.insert ({name:'Rekha', address:'Bhk', phone:'9841345678', email:'rekha@gmail.com'});

# Inserting Record-2
mydb > db.person.insertOne({name:'Reeta', address:'Lat', phone:'9842457895'});

# Inserting Record-3
mydb > db.person.insertMany(
	{name:'Ramesh', address:'Bhk'},
	{name:'Shree', Phone:'78451268'},
);

# Select all
mydb > dn.persons.find();
mydb > dn.persons.find().pretty();
mydb > dn.persons.find().limit(2).pretty();
mydb > dn.persons.find().sort({address:1}).pretty();
mydb > dn.persons.find().sort({address:-1}).pretty();
mydb > dn.persons.find({age:{$eq:20});
mydb > dn.persons.find({age:{$gt:10});
mydb > dn.persons.find({age:{$in:[10, 12, 13]});
mydb > dn.persons.find({$and:{age:10}, {address:'Ktm'});
mydb > dn.persons.find({$or:{age:10}, {address:'Ktm'});
mydb > dn.persons.find().count();


# Projection
mydb > dn.persons.find({age:10},{_id:0, name:1});


# Select all - 2
mydb > dn.persons.find({address:'ktm'});


# Update Records - 1
mydb > dn.persons.find()
mydb > dn.persons.update(
	{_id:ObjectId("61........")},
	{name:'New Name', address:'KTM'}
);

# Update Records - 2
mydb > dn.persons.find()
mydb > dn.persons.updateOne(
	{_id:ObjectId("61........")},
	{$set:{name:'New Name2'}}
);

# Update Record - 3 (Rename field)
mydb > dn.persons.updateOne(
	{_id:ObjectId("61........")},
	{$rename:{name:'fullname'}}
);

# Delete Record -1
mydb > dn.persons.remove({_id:ObjectId("61........")});

# Delete Record -2
mydb > dn.persons.deleteOne({_id:ObjectId("61........")});

# Delete Record -3
mydb > dn.persons.deleteMany({_id:ObjectId("61........")});
=======
Database Management
use < database_name >

use mern6
mern6 >_
mern6 > show dbs
mern6 > db.dropDatabase()

use mern6 //create and use or use only

Collection Management (table)

Insert an Object (document)
db.person.insert({object})
person - Collection

db.person.insert({pid:1, name:'Mitra'})
db.person.insertOne({pid:2, name:'Bishal'})

db.person.insertMany([
{pid:3, name:'Mohan', address:'Baneshwor'},
{pid:4, name:'Tara', email:'tara@gmail.com'},
{pid:5, name:'Asim', mobile:'9854321234'},
{pid:6, name:'Noroj', tel:'54321234'},
{pid:7, name:'Roman', office:'ABC'},
{pid:8, name:'Suraj', weight:55},
{pid:9, name:'Rajat', address:'Sanepa', mobile:'34567890', email:'rajat@gmail.com'}
]);

Select all objects
db.person.find();
db.person.find({pid:5});
db.person.find({name:'Asim'});
db.person.find().pretty();
db.person.find().limit(2)
db.person.find().sort({pid:1}); //ASC
db.person.find().sort({pid:-1}); //DESC
db.person.find({pid:{$eq:5}});
db.person.find({pid:{$gt:5}});
db.person.find({pid:{$lt:5}});
db.person.find({$and:[{pid:5}, {name:'Asim'}]});
db.person.find({$or:[{pid:6}, {name:'Asim'}]});
db.person.find().count()

# Update document
db.person.find();
db.person.updateOne({pid:3}, {$set:{name:'New name'}});
db.person.find({pid:3});

updateMany()

# Delete Record
db.person.deleteOne({_id:ObjectId("62d76bb1c537a24dd7d3c10a")})
db.person.deleteOne({pid:3})

























>>>>>>> 0cac7901f3da025ddfde347bc2905bb3f33a13a3
